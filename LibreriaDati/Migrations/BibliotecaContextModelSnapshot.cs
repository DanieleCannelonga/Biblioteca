// <auto-generated />
using System;
using LibreriaDati;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibreriaDati.Migrations
{
    [DbContext(typeof(BibliotecaContext))]
    partial class BibliotecaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LibreriaDati.Models.BibliotecaCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataDiCreazione")
                        .HasColumnType("datetime2");

                    b.Property<string>("Seriale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BibliotecaCard");
                });

            modelBuilder.Entity("LibreriaDati.Models.Checkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("A")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BibliotecaCardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Da")
                        .HasColumnType("datetime2");

                    b.Property<int>("RisorseBibliotecaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BibliotecaCardId");

                    b.HasIndex("RisorseBibliotecaId");

                    b.ToTable("Checkout");
                });

            modelBuilder.Entity("LibreriaDati.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BibliotecaCardId")
                        .HasColumnType("int");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataDiNascita")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FilialeDiAppartenenzaId")
                        .HasColumnType("int");

                    b.Property<string>("Indirizzo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BibliotecaCardId");

                    b.HasIndex("FilialeDiAppartenenzaId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("LibreriaDati.Models.CronologiaCheckout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BibliotecaCardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Entrata")
                        .HasColumnType("datetime2");

                    b.Property<int>("RisorseBibliotecaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Uscita")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BibliotecaCardId");

                    b.HasIndex("RisorseBibliotecaId");

                    b.ToTable("CronologiaCheckout");
                });

            modelBuilder.Entity("LibreriaDati.Models.Filiale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataDiApertura")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImmagineUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indirizzo")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Filiale");
                });

            modelBuilder.Entity("LibreriaDati.Models.Orario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FilialeId")
                        .HasColumnType("int");

                    b.Property<int>("GiorniSettimanali")
                        .HasColumnType("int");

                    b.Property<int>("OrarioDiApertura")
                        .HasColumnType("int");

                    b.Property<int>("OrarioDiChiusura")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilialeId");

                    b.ToTable("Orario");
                });

            modelBuilder.Entity("LibreriaDati.Models.Prestito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BibliotecaCardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataPrestito")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RisorseBibliotecaId")
                        .HasColumnType("int");

                    b.Property<string>("risorsa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BibliotecaCardId");

                    b.HasIndex("RisorseBibliotecaId");

                    b.ToTable("Prestito");
                });

            modelBuilder.Entity("LibreriaDati.Models.RisorseBiblioteca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Anno")
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FilialeId")
                        .HasColumnType("int");

                    b.Property<string>("ImmagineUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroDiCopie")
                        .HasColumnType("int");

                    b.Property<int>("StatoId")
                        .HasColumnType("int");

                    b.Property<string>("Titolo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FilialeId");

                    b.HasIndex("StatoId");

                    b.ToTable("RisorseBiblioteca");

                    b.HasDiscriminator<string>("Discriminator").HasValue("RisorseBiblioteca");
                });

            modelBuilder.Entity("LibreriaDati.Models.Stato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stato");
                });

            modelBuilder.Entity("LibreriaDati.Models.Libro", b =>
                {
                    b.HasBaseType("LibreriaDati.Models.RisorseBiblioteca");

                    b.Property<string>("Autore")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasaEditrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Libro");
                });

            modelBuilder.Entity("LibreriaDati.Models.Checkout", b =>
                {
                    b.HasOne("LibreriaDati.Models.BibliotecaCard", "BibliotecaCard")
                        .WithMany("Checkouts")
                        .HasForeignKey("BibliotecaCardId");

                    b.HasOne("LibreriaDati.Models.RisorseBiblioteca", "RisorseBiblioteca")
                        .WithMany()
                        .HasForeignKey("RisorseBibliotecaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibreriaDati.Models.Cliente", b =>
                {
                    b.HasOne("LibreriaDati.Models.BibliotecaCard", "BibliotecaCard")
                        .WithMany()
                        .HasForeignKey("BibliotecaCardId");

                    b.HasOne("LibreriaDati.Models.Filiale", "FilialeDiAppartenenza")
                        .WithMany("Clienti")
                        .HasForeignKey("FilialeDiAppartenenzaId");
                });

            modelBuilder.Entity("LibreriaDati.Models.CronologiaCheckout", b =>
                {
                    b.HasOne("LibreriaDati.Models.BibliotecaCard", "BibliotecaCard")
                        .WithMany()
                        .HasForeignKey("BibliotecaCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibreriaDati.Models.RisorseBiblioteca", "RisorseBiblioteca")
                        .WithMany()
                        .HasForeignKey("RisorseBibliotecaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibreriaDati.Models.Orario", b =>
                {
                    b.HasOne("LibreriaDati.Models.Filiale", "Filiale")
                        .WithMany()
                        .HasForeignKey("FilialeId");
                });

            modelBuilder.Entity("LibreriaDati.Models.Prestito", b =>
                {
                    b.HasOne("LibreriaDati.Models.BibliotecaCard", "BibliotecaCard")
                        .WithMany()
                        .HasForeignKey("BibliotecaCardId");

                    b.HasOne("LibreriaDati.Models.RisorseBiblioteca", "RisorseBiblioteca")
                        .WithMany()
                        .HasForeignKey("RisorseBibliotecaId");
                });

            modelBuilder.Entity("LibreriaDati.Models.RisorseBiblioteca", b =>
                {
                    b.HasOne("LibreriaDati.Models.Filiale", "Filiale")
                        .WithMany("RisorseBiblioteca")
                        .HasForeignKey("FilialeId");

                    b.HasOne("LibreriaDati.Models.Stato", "Stato")
                        .WithMany()
                        .HasForeignKey("StatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
